version: '3.8'

networks:
  monitoring:
    driver: bridge

volumes:
  prometheus_data: {}
  grafana_data: {}


services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - $PWD/../Config_Files/Prometheus/prometheus.yaml:/etc/prometheus/prometheus.yml
      - $PWD/../Config_Files/Prometheus/alert_rules.yaml:/etc/prometheus/alert_rules.yaml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - monitoring


  vmstorage:
    container_name: vmstorage
    image: victoriametrics/vmstorage:latest
#    ports:
#      - 8482
#      - 8400
#      - 8401
    volumes:
      - ./vmstorage:/storage
    command:
      - '--storageDataPath=/storage'
    restart: always


  vmselect:
    image: victoriametrics/vmselect:latest
    container_name: vmselect
    restart: unless-stopped
    depends_on:
      - "vmstorage"
    command:
      - '--storageNode=vmstorage:8401'
    ports:
      - "8481:8481"



  vminsert:
    image: victoriametrics/vminsert:latest
    container_name: vminsert
    restart: unless-stopped
    depends_on:
      - "vmstorage"
    command:
      - '--storageNode=vmstorage:8401'
    ports:
      - "8480:8480"



  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    volumes:
      - grafana_data:/var/lib/grafana
      - $PWD/../Config_Files/Grafana/:/etc/grafana/
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
    ports:
      - "3000:3000"
    networks:
      - monitoring
  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    restart: unless-stopped
    volumes:
      - $PWD/../Config_Files/Alert_Manager/alertmanager.yaml:/etc/alertmanager/alertmanager.yaml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yaml'
    ports:
      - "9093:9093"
    env_file:
      - .env
    networks:
      - monitoring

